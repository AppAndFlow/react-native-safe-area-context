"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[927],{9873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"testing","title":"Testing","description":"Built in mocks","source":"@site/docs/testing.mdx","sourceDirName":".","slug":"/testing","permalink":"/react-native-safe-area-context/docs/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/AppAndFlow/react-native-safe-area-context/tree/main/docs/docs/testing.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Testing","sidebar_label":"Testing"},"sidebar":"docsSidebar","previous":{"title":"Optimizations","permalink":"/react-native-safe-area-context/docs/optimizations"},"next":{"title":"Contributing","permalink":"/react-native-safe-area-context/docs/contributing"}}');var i=n(4848),o=n(8453);const r={sidebar_position:5,title:"Testing",sidebar_label:"Testing"},a=void 0,c={},l=[{value:"Built in mocks",id:"built-in-mocks",level:3},{value:"Enabling Babel Parsing for Modules",id:"enabling-babel-parsing-for-modules",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"built-in-mocks",children:"Built in mocks"}),"\n",(0,i.jsx)(t.p,{children:"This library includes a built in mock for Jest. It will use the following metrics by default:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"{\n  frame: {\n    width: 320,\n    height: 640,\n    x: 0,\n    y: 0,\n  },\n  insets: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"To use it, add the following code to the jest setup file:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import mockSafeAreaContext from 'react-native-safe-area-context/jest/mock';\n\njest.mock('react-native-safe-area-context', () => mockSafeAreaContext);\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To have more control over the test values it is also possible to pass ",(0,i.jsx)(t.code,{children:"initialMetrics"})," to\n",(0,i.jsx)(t.code,{children:"SafeAreaProvider"})," to provide mock data for frame and insets."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"export function TestSafeAreaProvider({ children }) {\n  return (\n    <SafeAreaProvider\n      initialMetrics={{\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }}\n    >\n      {children}\n    </SafeAreaProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"enabling-babel-parsing-for-modules",children:"Enabling Babel Parsing for Modules"}),"\n",(0,i.jsx)(t.p,{children:"While trying to use this mock, a frequently encountered error is:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"SyntaxError: Cannot use import statement outside a module.\n"})}),"\n",(0,i.jsx)(t.p,{children:"This issue arises due to the use of the import statement. To resolve it, you need to permit Babel to parse the file."}),"\n",(0,i.jsxs)(t.p,{children:["By default, ",(0,i.jsx)(t.a,{href:"https://jestjs.io/docs/configuration#transformignorepatterns-arraystring",children:"Jest does not parse files located within the node_modules folder"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["However, you can modify this behavior as outlined in the Jest documentation on ",(0,i.jsxs)(t.a,{href:"https://jestjs.io/docs/tutorial-react-native#transformignorepatterns-customization",children:[(0,i.jsx)(t.code,{children:"transformIgnorePatterns"})," customization"]}),".\nIf you're using a preset, like the one from ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/react-native/blob/main/packages/react-native/jest-preset.js",children:"react-native"}),", you should update your Jest configuration to include ",(0,i.jsx)(t.code,{children:"react-native-safe-area-context"})," as shown below:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"transformIgnorePatterns: [\n  'node_modules/(?!((jest-)?react-native|@react-native(-community)?|react-native-safe-area-context)/)',\n];\n"})}),"\n",(0,i.jsx)(t.p,{children:"This adjustment ensures Babel correctly parses modules, avoiding the aforementioned syntax error."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);